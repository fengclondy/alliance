<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.aso.biz.db.dao.ContractMapper" >
  <resultMap id="BaseResultMap" type="com.ai.aso.biz.db.model.Contract" >
    <id column="Cont_Id" property="contId" jdbcType="VARCHAR" />
    <result column="Cust_Id" property="custId" jdbcType="VARCHAR" />
    <result column="Cust_Name" property="custName" jdbcType="VARCHAR" />
    <result column="Cont_No" property="contNo" jdbcType="VARCHAR" />
    <result column="Cont_Name" property="contName" jdbcType="VARCHAR" />
    <result column="Cont_Copy" property="contCopy" jdbcType="VARCHAR" />
    <result column="Cont_Value" property="contValue" jdbcType="BIGINT" />
    <result column="Busi_Type" property="busiType" jdbcType="VARCHAR" />
    <result column="Pay_Type" property="payType" jdbcType="SMALLINT" />
    <result column="Payment" property="payment" jdbcType="BIGINT" />
    <result column="Deposit" property="deposit" jdbcType="BIGINT" />
    <result column="Payed_Fee" property="payedFee" jdbcType="BIGINT" />
    <result column="Cont_Off" property="contOff" jdbcType="INTEGER" />
    <result column="Create_Date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="Eff_Date" property="effDate" jdbcType="TIMESTAMP" />
    <result column="Exp_Date" property="expDate" jdbcType="TIMESTAMP" />
    <result column="State" property="state" jdbcType="INTEGER" />
    <result column="Sub_State" property="subState" jdbcType="INTEGER" />
    <result column="Region_Id" property="regionId" jdbcType="INTEGER" />
    <result column="Service_Id" property="serviceId" jdbcType="VARCHAR" />
    <result column="Payment_Id" property="paymentId" jdbcType="VARCHAR" />
    <result column="Ext1" property="ext1" jdbcType="VARCHAR" />
    <result column="Ext2" property="ext2" jdbcType="VARCHAR" />
    <result column="Ext3" property="ext3" jdbcType="VARCHAR" />
    <result column="Ext4" property="ext4" jdbcType="VARCHAR" />
    <result column="Ext5" property="ext5" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Cont_Id, Cust_Id, Cust_Name, Cont_No, Cont_Name, Cont_Copy, Cont_Value, Busi_Type, 
    Pay_Type, Payment, Deposit, Payed_Fee, Cont_Off, Create_Date, Eff_Date, Exp_Date, 
    `State`, Sub_State, Region_Id, Service_Id, Payment_Id, Ext1, Ext2, Ext3, Ext4, Ext5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.aso.biz.db.model.ContractExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tc_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tc_contract
    where Cont_Id = #{contId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tc_contract
    where Cont_Id = #{contId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.aso.biz.db.model.ContractExample" >
    delete from tc_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.aso.biz.db.model.Contract" >
    insert into tc_contract (Cont_Id, Cust_Id, Cust_Name, 
      Cont_No, Cont_Name, Cont_Copy, 
      Cont_Value, Busi_Type, Pay_Type, 
      Payment, Deposit, Payed_Fee, 
      Cont_Off, Create_Date, Eff_Date, 
      Exp_Date, `State`, Sub_State, 
      Region_Id, Service_Id, Payment_Id, 
      Ext1, Ext2, Ext3, Ext4, 
      Ext5)
    values (#{contId,jdbcType=VARCHAR}, #{custId,jdbcType=VARCHAR}, #{custName,jdbcType=VARCHAR}, 
      #{contNo,jdbcType=VARCHAR}, #{contName,jdbcType=VARCHAR}, #{contCopy,jdbcType=VARCHAR}, 
      #{contValue,jdbcType=BIGINT}, #{busiType,jdbcType=VARCHAR}, #{payType,jdbcType=SMALLINT}, 
      #{payment,jdbcType=BIGINT}, #{deposit,jdbcType=BIGINT}, #{payedFee,jdbcType=BIGINT}, 
      #{contOff,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{effDate,jdbcType=TIMESTAMP}, 
      #{expDate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{subState,jdbcType=INTEGER}, 
      #{regionId,jdbcType=INTEGER}, #{serviceId,jdbcType=VARCHAR}, #{paymentId,jdbcType=VARCHAR}, 
      #{ext1,jdbcType=VARCHAR}, #{ext2,jdbcType=VARCHAR}, #{ext3,jdbcType=VARCHAR}, #{ext4,jdbcType=VARCHAR}, 
      #{ext5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.aso.biz.db.model.Contract" >
    insert into tc_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contId != null" >
        Cont_Id,
      </if>
      <if test="custId != null" >
        Cust_Id,
      </if>
      <if test="custName != null" >
        Cust_Name,
      </if>
      <if test="contNo != null" >
        Cont_No,
      </if>
      <if test="contName != null" >
        Cont_Name,
      </if>
      <if test="contCopy != null" >
        Cont_Copy,
      </if>
      <if test="contValue != null" >
        Cont_Value,
      </if>
      <if test="busiType != null" >
        Busi_Type,
      </if>
      <if test="payType != null" >
        Pay_Type,
      </if>
      <if test="payment != null" >
        Payment,
      </if>
      <if test="deposit != null" >
        Deposit,
      </if>
      <if test="payedFee != null" >
        Payed_Fee,
      </if>
      <if test="contOff != null" >
        Cont_Off,
      </if>
      <if test="createDate != null" >
        Create_Date,
      </if>
      <if test="effDate != null" >
        Eff_Date,
      </if>
      <if test="expDate != null" >
        Exp_Date,
      </if>
      <if test="state != null" >
        `State`,
      </if>
      <if test="subState != null" >
        Sub_State,
      </if>
      <if test="regionId != null" >
        Region_Id,
      </if>
      <if test="serviceId != null" >
        Service_Id,
      </if>
      <if test="paymentId != null" >
        Payment_Id,
      </if>
      <if test="ext1 != null" >
        Ext1,
      </if>
      <if test="ext2 != null" >
        Ext2,
      </if>
      <if test="ext3 != null" >
        Ext3,
      </if>
      <if test="ext4 != null" >
        Ext4,
      </if>
      <if test="ext5 != null" >
        Ext5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contId != null" >
        #{contId,jdbcType=VARCHAR},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=VARCHAR},
      </if>
      <if test="custName != null" >
        #{custName,jdbcType=VARCHAR},
      </if>
      <if test="contNo != null" >
        #{contNo,jdbcType=VARCHAR},
      </if>
      <if test="contName != null" >
        #{contName,jdbcType=VARCHAR},
      </if>
      <if test="contCopy != null" >
        #{contCopy,jdbcType=VARCHAR},
      </if>
      <if test="contValue != null" >
        #{contValue,jdbcType=BIGINT},
      </if>
      <if test="busiType != null" >
        #{busiType,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=SMALLINT},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=BIGINT},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=BIGINT},
      </if>
      <if test="payedFee != null" >
        #{payedFee,jdbcType=BIGINT},
      </if>
      <if test="contOff != null" >
        #{contOff,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="effDate != null" >
        #{effDate,jdbcType=TIMESTAMP},
      </if>
      <if test="expDate != null" >
        #{expDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="subState != null" >
        #{subState,jdbcType=INTEGER},
      </if>
      <if test="regionId != null" >
        #{regionId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null" >
        #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="paymentId != null" >
        #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="ext1 != null" >
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null" >
        #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="ext4 != null" >
        #{ext4,jdbcType=VARCHAR},
      </if>
      <if test="ext5 != null" >
        #{ext5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.aso.biz.db.model.ContractExample" resultType="java.lang.Integer" >
    select count(*) from tc_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tc_contract
    <set >
      <if test="record.contId != null" >
        Cont_Id = #{record.contId,jdbcType=VARCHAR},
      </if>
      <if test="record.custId != null" >
        Cust_Id = #{record.custId,jdbcType=VARCHAR},
      </if>
      <if test="record.custName != null" >
        Cust_Name = #{record.custName,jdbcType=VARCHAR},
      </if>
      <if test="record.contNo != null" >
        Cont_No = #{record.contNo,jdbcType=VARCHAR},
      </if>
      <if test="record.contName != null" >
        Cont_Name = #{record.contName,jdbcType=VARCHAR},
      </if>
      <if test="record.contCopy != null" >
        Cont_Copy = #{record.contCopy,jdbcType=VARCHAR},
      </if>
      <if test="record.contValue != null" >
        Cont_Value = #{record.contValue,jdbcType=BIGINT},
      </if>
      <if test="record.busiType != null" >
        Busi_Type = #{record.busiType,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null" >
        Pay_Type = #{record.payType,jdbcType=SMALLINT},
      </if>
      <if test="record.payment != null" >
        Payment = #{record.payment,jdbcType=BIGINT},
      </if>
      <if test="record.deposit != null" >
        Deposit = #{record.deposit,jdbcType=BIGINT},
      </if>
      <if test="record.payedFee != null" >
        Payed_Fee = #{record.payedFee,jdbcType=BIGINT},
      </if>
      <if test="record.contOff != null" >
        Cont_Off = #{record.contOff,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        Create_Date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.effDate != null" >
        Eff_Date = #{record.effDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expDate != null" >
        Exp_Date = #{record.expDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        `State` = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.subState != null" >
        Sub_State = #{record.subState,jdbcType=INTEGER},
      </if>
      <if test="record.regionId != null" >
        Region_Id = #{record.regionId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceId != null" >
        Service_Id = #{record.serviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentId != null" >
        Payment_Id = #{record.paymentId,jdbcType=VARCHAR},
      </if>
      <if test="record.ext1 != null" >
        Ext1 = #{record.ext1,jdbcType=VARCHAR},
      </if>
      <if test="record.ext2 != null" >
        Ext2 = #{record.ext2,jdbcType=VARCHAR},
      </if>
      <if test="record.ext3 != null" >
        Ext3 = #{record.ext3,jdbcType=VARCHAR},
      </if>
      <if test="record.ext4 != null" >
        Ext4 = #{record.ext4,jdbcType=VARCHAR},
      </if>
      <if test="record.ext5 != null" >
        Ext5 = #{record.ext5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tc_contract
    set Cont_Id = #{record.contId,jdbcType=VARCHAR},
      Cust_Id = #{record.custId,jdbcType=VARCHAR},
      Cust_Name = #{record.custName,jdbcType=VARCHAR},
      Cont_No = #{record.contNo,jdbcType=VARCHAR},
      Cont_Name = #{record.contName,jdbcType=VARCHAR},
      Cont_Copy = #{record.contCopy,jdbcType=VARCHAR},
      Cont_Value = #{record.contValue,jdbcType=BIGINT},
      Busi_Type = #{record.busiType,jdbcType=VARCHAR},
      Pay_Type = #{record.payType,jdbcType=SMALLINT},
      Payment = #{record.payment,jdbcType=BIGINT},
      Deposit = #{record.deposit,jdbcType=BIGINT},
      Payed_Fee = #{record.payedFee,jdbcType=BIGINT},
      Cont_Off = #{record.contOff,jdbcType=INTEGER},
      Create_Date = #{record.createDate,jdbcType=TIMESTAMP},
      Eff_Date = #{record.effDate,jdbcType=TIMESTAMP},
      Exp_Date = #{record.expDate,jdbcType=TIMESTAMP},
      `State` = #{record.state,jdbcType=INTEGER},
      Sub_State = #{record.subState,jdbcType=INTEGER},
      Region_Id = #{record.regionId,jdbcType=INTEGER},
      Service_Id = #{record.serviceId,jdbcType=VARCHAR},
      Payment_Id = #{record.paymentId,jdbcType=VARCHAR},
      Ext1 = #{record.ext1,jdbcType=VARCHAR},
      Ext2 = #{record.ext2,jdbcType=VARCHAR},
      Ext3 = #{record.ext3,jdbcType=VARCHAR},
      Ext4 = #{record.ext4,jdbcType=VARCHAR},
      Ext5 = #{record.ext5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.aso.biz.db.model.Contract" >
    update tc_contract
    <set >
      <if test="custId != null" >
        Cust_Id = #{custId,jdbcType=VARCHAR},
      </if>
      <if test="custName != null" >
        Cust_Name = #{custName,jdbcType=VARCHAR},
      </if>
      <if test="contNo != null" >
        Cont_No = #{contNo,jdbcType=VARCHAR},
      </if>
      <if test="contName != null" >
        Cont_Name = #{contName,jdbcType=VARCHAR},
      </if>
      <if test="contCopy != null" >
        Cont_Copy = #{contCopy,jdbcType=VARCHAR},
      </if>
      <if test="contValue != null" >
        Cont_Value = #{contValue,jdbcType=BIGINT},
      </if>
      <if test="busiType != null" >
        Busi_Type = #{busiType,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        Pay_Type = #{payType,jdbcType=SMALLINT},
      </if>
      <if test="payment != null" >
        Payment = #{payment,jdbcType=BIGINT},
      </if>
      <if test="deposit != null" >
        Deposit = #{deposit,jdbcType=BIGINT},
      </if>
      <if test="payedFee != null" >
        Payed_Fee = #{payedFee,jdbcType=BIGINT},
      </if>
      <if test="contOff != null" >
        Cont_Off = #{contOff,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        Create_Date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="effDate != null" >
        Eff_Date = #{effDate,jdbcType=TIMESTAMP},
      </if>
      <if test="expDate != null" >
        Exp_Date = #{expDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        `State` = #{state,jdbcType=INTEGER},
      </if>
      <if test="subState != null" >
        Sub_State = #{subState,jdbcType=INTEGER},
      </if>
      <if test="regionId != null" >
        Region_Id = #{regionId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null" >
        Service_Id = #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="paymentId != null" >
        Payment_Id = #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="ext1 != null" >
        Ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        Ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null" >
        Ext3 = #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="ext4 != null" >
        Ext4 = #{ext4,jdbcType=VARCHAR},
      </if>
      <if test="ext5 != null" >
        Ext5 = #{ext5,jdbcType=VARCHAR},
      </if>
    </set>
    where Cont_Id = #{contId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.aso.biz.db.model.Contract" >
    update tc_contract
    set Cust_Id = #{custId,jdbcType=VARCHAR},
      Cust_Name = #{custName,jdbcType=VARCHAR},
      Cont_No = #{contNo,jdbcType=VARCHAR},
      Cont_Name = #{contName,jdbcType=VARCHAR},
      Cont_Copy = #{contCopy,jdbcType=VARCHAR},
      Cont_Value = #{contValue,jdbcType=BIGINT},
      Busi_Type = #{busiType,jdbcType=VARCHAR},
      Pay_Type = #{payType,jdbcType=SMALLINT},
      Payment = #{payment,jdbcType=BIGINT},
      Deposit = #{deposit,jdbcType=BIGINT},
      Payed_Fee = #{payedFee,jdbcType=BIGINT},
      Cont_Off = #{contOff,jdbcType=INTEGER},
      Create_Date = #{createDate,jdbcType=TIMESTAMP},
      Eff_Date = #{effDate,jdbcType=TIMESTAMP},
      Exp_Date = #{expDate,jdbcType=TIMESTAMP},
      `State` = #{state,jdbcType=INTEGER},
      Sub_State = #{subState,jdbcType=INTEGER},
      Region_Id = #{regionId,jdbcType=INTEGER},
      Service_Id = #{serviceId,jdbcType=VARCHAR},
      Payment_Id = #{paymentId,jdbcType=VARCHAR},
      Ext1 = #{ext1,jdbcType=VARCHAR},
      Ext2 = #{ext2,jdbcType=VARCHAR},
      Ext3 = #{ext3,jdbcType=VARCHAR},
      Ext4 = #{ext4,jdbcType=VARCHAR},
      Ext5 = #{ext5,jdbcType=VARCHAR}
    where Cont_Id = #{contId,jdbcType=VARCHAR}
  </update>
</mapper>