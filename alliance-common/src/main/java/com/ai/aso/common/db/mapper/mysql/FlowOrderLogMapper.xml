<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.aso.common.db.dao.FlowOrderLogMapper" >
  <resultMap id="BaseResultMap" type="com.ai.aso.common.db.model.FlowOrderLog" >
    <id column="request_no" property="requestNo" jdbcType="VARCHAR" />
    <result column="cont_id" property="contId" jdbcType="VARCHAR" />
    <result column="phone_id" property="phoneId" jdbcType="VARCHAR" />
    <result column="offer_id" property="offerId" jdbcType="VARCHAR" />
    <result column="discount" property="discount" jdbcType="VARCHAR" />
    <result column="request_data" property="requestData" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="result_code" property="resultCode" jdbcType="VARCHAR" />
    <result column="result_date" property="resultDate" jdbcType="TIMESTAMP" />
    <result column="back_code" property="backCode" jdbcType="VARCHAR" />
    <result column="back_desc" property="backDesc" jdbcType="VARCHAR" />
    <result column="back_date" property="backDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    request_no, cont_id, phone_id, offer_id, discount, request_data, state, create_date, 
    result_code, result_date, back_code, back_desc, back_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.aso.common.db.model.FlowOrderLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tc_flow_order_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tc_flow_order_log
    where request_no = #{requestNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tc_flow_order_log
    where request_no = #{requestNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.aso.common.db.model.FlowOrderLogExample" >
    delete from tc_flow_order_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.aso.common.db.model.FlowOrderLog" >
    insert into tc_flow_order_log (request_no, cont_id, phone_id, 
      offer_id, discount, request_data, 
      state, create_date, result_code, 
      result_date, back_code, back_desc, 
      back_date)
    values (#{requestNo,jdbcType=VARCHAR}, #{contId,jdbcType=VARCHAR}, #{phoneId,jdbcType=VARCHAR}, 
      #{offerId,jdbcType=VARCHAR}, #{discount,jdbcType=VARCHAR}, #{requestData,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{resultCode,jdbcType=VARCHAR}, 
      #{resultDate,jdbcType=TIMESTAMP}, #{backCode,jdbcType=VARCHAR}, #{backDesc,jdbcType=VARCHAR}, 
      #{backDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.aso.common.db.model.FlowOrderLog" >
    insert into tc_flow_order_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="requestNo != null" >
        request_no,
      </if>
      <if test="contId != null" >
        cont_id,
      </if>
      <if test="phoneId != null" >
        phone_id,
      </if>
      <if test="offerId != null" >
        offer_id,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="requestData != null" >
        request_data,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="resultCode != null" >
        result_code,
      </if>
      <if test="resultDate != null" >
        result_date,
      </if>
      <if test="backCode != null" >
        back_code,
      </if>
      <if test="backDesc != null" >
        back_desc,
      </if>
      <if test="backDate != null" >
        back_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="requestNo != null" >
        #{requestNo,jdbcType=VARCHAR},
      </if>
      <if test="contId != null" >
        #{contId,jdbcType=VARCHAR},
      </if>
      <if test="phoneId != null" >
        #{phoneId,jdbcType=VARCHAR},
      </if>
      <if test="offerId != null" >
        #{offerId,jdbcType=VARCHAR},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=VARCHAR},
      </if>
      <if test="requestData != null" >
        #{requestData,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="resultCode != null" >
        #{resultCode,jdbcType=VARCHAR},
      </if>
      <if test="resultDate != null" >
        #{resultDate,jdbcType=TIMESTAMP},
      </if>
      <if test="backCode != null" >
        #{backCode,jdbcType=VARCHAR},
      </if>
      <if test="backDesc != null" >
        #{backDesc,jdbcType=VARCHAR},
      </if>
      <if test="backDate != null" >
        #{backDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.aso.common.db.model.FlowOrderLogExample" resultType="java.lang.Integer" >
    select count(*) from tc_flow_order_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tc_flow_order_log
    <set >
      <if test="record.requestNo != null" >
        request_no = #{record.requestNo,jdbcType=VARCHAR},
      </if>
      <if test="record.contId != null" >
        cont_id = #{record.contId,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneId != null" >
        phone_id = #{record.phoneId,jdbcType=VARCHAR},
      </if>
      <if test="record.offerId != null" >
        offer_id = #{record.offerId,jdbcType=VARCHAR},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=VARCHAR},
      </if>
      <if test="record.requestData != null" >
        request_data = #{record.requestData,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.resultCode != null" >
        result_code = #{record.resultCode,jdbcType=VARCHAR},
      </if>
      <if test="record.resultDate != null" >
        result_date = #{record.resultDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.backCode != null" >
        back_code = #{record.backCode,jdbcType=VARCHAR},
      </if>
      <if test="record.backDesc != null" >
        back_desc = #{record.backDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.backDate != null" >
        back_date = #{record.backDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tc_flow_order_log
    set request_no = #{record.requestNo,jdbcType=VARCHAR},
      cont_id = #{record.contId,jdbcType=VARCHAR},
      phone_id = #{record.phoneId,jdbcType=VARCHAR},
      offer_id = #{record.offerId,jdbcType=VARCHAR},
      discount = #{record.discount,jdbcType=VARCHAR},
      request_data = #{record.requestData,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      result_code = #{record.resultCode,jdbcType=VARCHAR},
      result_date = #{record.resultDate,jdbcType=TIMESTAMP},
      back_code = #{record.backCode,jdbcType=VARCHAR},
      back_desc = #{record.backDesc,jdbcType=VARCHAR},
      back_date = #{record.backDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.aso.common.db.model.FlowOrderLog" >
    update tc_flow_order_log
    <set >
      <if test="contId != null" >
        cont_id = #{contId,jdbcType=VARCHAR},
      </if>
      <if test="phoneId != null" >
        phone_id = #{phoneId,jdbcType=VARCHAR},
      </if>
      <if test="offerId != null" >
        offer_id = #{offerId,jdbcType=VARCHAR},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=VARCHAR},
      </if>
      <if test="requestData != null" >
        request_data = #{requestData,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="resultCode != null" >
        result_code = #{resultCode,jdbcType=VARCHAR},
      </if>
      <if test="resultDate != null" >
        result_date = #{resultDate,jdbcType=TIMESTAMP},
      </if>
      <if test="backCode != null" >
        back_code = #{backCode,jdbcType=VARCHAR},
      </if>
      <if test="backDesc != null" >
        back_desc = #{backDesc,jdbcType=VARCHAR},
      </if>
      <if test="backDate != null" >
        back_date = #{backDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where request_no = #{requestNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.aso.common.db.model.FlowOrderLog" >
    update tc_flow_order_log
    set cont_id = #{contId,jdbcType=VARCHAR},
      phone_id = #{phoneId,jdbcType=VARCHAR},
      offer_id = #{offerId,jdbcType=VARCHAR},
      discount = #{discount,jdbcType=VARCHAR},
      request_data = #{requestData,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      result_code = #{resultCode,jdbcType=VARCHAR},
      result_date = #{resultDate,jdbcType=TIMESTAMP},
      back_code = #{backCode,jdbcType=VARCHAR},
      back_desc = #{backDesc,jdbcType=VARCHAR},
      back_date = #{backDate,jdbcType=TIMESTAMP}
    where request_no = #{requestNo,jdbcType=VARCHAR}
  </update>
</mapper>